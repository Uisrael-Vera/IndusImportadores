// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Importadora.Infraestructura.AccesoDatos;

public partial class importadoraDBContext : DbContext
{
    public importadoraDBContext()
    {
    }

    public importadoraDBContext(DbContextOptions<importadoraDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ACTIVIDAD> ACTIVIDAD { get; set; }

    public virtual DbSet<CONTACTO> CONTACTO { get; set; }

    public virtual DbSet<DETALLEVENTA> DETALLEVENTA { get; set; }

    public virtual DbSet<EMPRESA> EMPRESA { get; set; }

    public virtual DbSet<NOTIFICACION> NOTIFICACION { get; set; }

    public virtual DbSet<PRECIOPRODUCTO> PRECIOPRODUCTO { get; set; }

    public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }

    public virtual DbSet<ROL> ROL { get; set; }

    public virtual DbSet<TIPOVENTA> TIPOVENTA { get; set; }

    public virtual DbSet<UNIDADMEDIDA> UNIDADMEDIDA { get; set; }

    public virtual DbSet<USUARIO> USUARIO { get; set; }

    public virtual DbSet<VENTA> VENTA { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=LAPTOP-OOU6HUV7;Initial Catalog=GestionComercialDB;Integrated Security=True; TrustServerCertificate= True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ACTIVIDAD>(entity =>
        {
            entity.HasKey(e => e.id_actividad).HasName("PK__ACTIVIDA__DCD348836B84CD94");

            entity.Property(e => e.detalles)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<CONTACTO>(entity =>
        {
            entity.HasKey(e => e.id_contacto).HasName("PK__CONTACTO__099A52B8B377EB60");

            entity.Property(e => e.apellido)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.cargo)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.cedula)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.correo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.telefono)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.id_empresaNavigation).WithMany(p => p.CONTACTO)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK__CONTACTO__id_emp__4D94879B");
        });

        modelBuilder.Entity<DETALLEVENTA>(entity =>
        {
            entity.HasKey(e => e.id_detalle).HasName("PK__DETALLEV__4F1332DECA7A868A");

            entity.Property(e => e.ivaTotal).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.subtotalProducto).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.totalProducto).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.id_precioNavigation).WithMany(p => p.DETALLEVENTA)
                .HasForeignKey(d => d.id_precio)
                .HasConstraintName("FK__DETALLEVE__id_pr__6754599E");

            entity.HasOne(d => d.id_ventaNavigation).WithMany(p => p.DETALLEVENTA)
                .HasForeignKey(d => d.id_venta)
                .HasConstraintName("FK__DETALLEVE__id_ve__66603565");
        });

        modelBuilder.Entity<EMPRESA>(entity =>
        {
            entity.HasKey(e => e.id_empresa).HasName("PK__EMPRESA__4A0B7E2CECFCA545");

            entity.Property(e => e.cedula_ruc)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.direccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.pagina_web)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<NOTIFICACION>(entity =>
        {
            entity.HasKey(e => e.id_notificacion).HasName("PK__NOTIFICA__8270F9A5E4678DC8");

            entity.Property(e => e.descripcion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.fecha_programada).HasColumnType("datetime");
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.id_actividadNavigation).WithMany(p => p.NOTIFICACION)
                .HasForeignKey(d => d.id_actividad)
                .HasConstraintName("FK__NOTIFICAC__id_ac__6B24EA82");

            entity.HasOne(d => d.id_contactoNavigation).WithMany(p => p.NOTIFICACION)
                .HasForeignKey(d => d.id_contacto)
                .HasConstraintName("FK__NOTIFICAC__id_co__6A30C649");
        });

        modelBuilder.Entity<PRECIOPRODUCTO>(entity =>
        {
            entity.HasKey(e => e.id_precio).HasName("PK__PRECIOPR__A70EF6ED8C9236AA");

            entity.Property(e => e.precio).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.id_productoNavigation).WithMany(p => p.PRECIOPRODUCTO)
                .HasForeignKey(d => d.id_producto)
                .HasConstraintName("FK__PRECIOPRO__id_pr__5441852A");

            entity.HasOne(d => d.id_unidadMedidaNavigation).WithMany(p => p.PRECIOPRODUCTO)
                .HasForeignKey(d => d.id_unidadMedida)
                .HasConstraintName("FK__PRECIOPRO__id_un__5535A963");
        });

        modelBuilder.Entity<PRODUCTO>(entity =>
        {
            entity.HasKey(e => e.id_producto).HasName("PK__PRODUCTO__FF341C0D3F19B6A2");

            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ROL>(entity =>
        {
            entity.HasKey(e => e.id_rol).HasName("PK__ROL__6ABCB5E0194CBC17");

            entity.Property(e => e.nombreRol)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.HasMany(d => d.id_usuario).WithMany(p => p.id_rol)
                .UsingEntity<Dictionary<string, object>>(
                    "USUARIOROL",
                    r => r.HasOne<USUARIO>().WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__USUARIORO__id_us__5CD6CB2B"),
                    l => l.HasOne<ROL>().WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__USUARIORO__id_ro__5BE2A6F2"),
                    j =>
                    {
                        j.HasKey("id_rol", "id_usuario").HasName("PK__USUARIOR__AE5F55AA1C8F1128");
                    });
        });

        modelBuilder.Entity<TIPOVENTA>(entity =>
        {
            entity.HasKey(e => e.id_tipoventa).HasName("PK__TIPOVENT__530B540C4B124EE8");

            entity.Property(e => e.descripcion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.nombreTipo)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<UNIDADMEDIDA>(entity =>
        {
            entity.HasKey(e => e.id_unidadMedida).HasName("PK__UNIDADME__1BDC97E546BEF49A");

            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.simbolo)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.tipo)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<USUARIO>(entity =>
        {
            entity.HasKey(e => e.id_usuario).HasName("PK__USUARIO__4E3E04AD21FEED49");

            entity.Property(e => e.correo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.password)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VENTA>(entity =>
        {
            entity.HasKey(e => e.id_venta).HasName("PK__VENTA__459533BF079E0F4E");

            entity.Property(e => e.ivaTotal).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.subtotalTotal).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.tasaIva).HasColumnType("decimal(4, 2)");
            entity.Property(e => e.totalVenta).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.id_empresaNavigation).WithMany(p => p.VENTA)
                .HasForeignKey(d => d.id_empresa)
                .HasConstraintName("FK__VENTA__id_empres__619B8048");

            entity.HasOne(d => d.id_tipoventaNavigation).WithMany(p => p.VENTA)
                .HasForeignKey(d => d.id_tipoventa)
                .HasConstraintName("FK__VENTA__id_tipove__628FA481");

            entity.HasOne(d => d.id_usuarioNavigation).WithMany(p => p.VENTA)
                .HasForeignKey(d => d.id_usuario)
                .HasConstraintName("FK__VENTA__id_usuari__6383C8BA");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}